{'limit_num_sen': 25, 'limit_num_words': 13, 'lr': 1e-05, 'lr_edge': 0.1, 'Seed': 1998, 'weight_decay': 0.0005, 'hidden_dim': 100, 'input_dim': 768, 'output_dim': 128, 'final_dim': 2, 'test_perc': 0.1, 'val_perc': 0.11, 'beta': 0.0, 'epoch': 100, 'batch_size': 8, 'device': device(type='cuda', index=0), 'bert_model': 'bert-base-uncased', 'dataset_name': 'politic', 'dataset_path': './data/politic/politic_news.tsv', 'img_path': './data/politic/imgs', 'model_path': './data/politic/politic_checkpoint.pt', 'news_list': './data/politic/politic_news.npy', 'news_label': './data/politic/politic_label.npy', 'news_id': './data/politic/politic_id.npy', 'nodes_num_data': './data/politic/politic_node.npy'}
********************************************************************************
********************************************************************************
********************************************************************************
Constructing Model...
device: cuda:0
init
********************************************************************************
********************************************************************************
Defining Loss Function...
********************************************************************************
********************************************************************************
Taking Adam as the Ooptimizer...
********************************************************************************
the length of news_list is: 661
the length of news_tit_cont is: 661
convert_text_to_token......
  0%|          | 0/661 [00:00<?, ?it/s]  4%|▍         | 27/661 [00:00<00:02, 265.09it/s]  8%|▊         | 54/661 [00:00<00:02, 209.57it/s] 12%|█▏        | 78/661 [00:00<00:02, 217.97it/s] 15%|█▌        | 101/661 [00:00<00:02, 205.18it/s] 20%|█▉        | 130/661 [00:00<00:02, 231.28it/s] 24%|██▎       | 156/661 [00:00<00:02, 239.75it/s] 28%|██▊       | 182/661 [00:00<00:01, 243.52it/s] 31%|███▏      | 207/661 [00:00<00:01, 238.13it/s] 35%|███▌      | 232/661 [00:01<00:01, 227.97it/s] 39%|███▉      | 261/661 [00:01<00:01, 241.42it/s] 44%|████▎     | 289/661 [00:01<00:01, 250.50it/s] 48%|████▊     | 315/661 [00:01<00:01, 236.08it/s] 51%|█████▏    | 339/661 [00:01<00:01, 227.22it/s] 55%|█████▌    | 365/661 [00:01<00:01, 232.57it/s] 59%|█████▉    | 389/661 [00:01<00:01, 234.28it/s] 62%|██████▏   | 413/661 [00:01<00:01, 232.80it/s] 66%|██████▌   | 437/661 [00:01<00:00, 227.09it/s] 70%|██████▉   | 462/661 [00:01<00:00, 232.03it/s] 74%|███████▍  | 488/661 [00:02<00:00, 235.46it/s] 77%|███████▋  | 512/661 [00:02<00:00, 225.63it/s] 81%|████████  | 535/661 [00:02<00:00, 224.76it/s] 85%|████████▍ | 559/661 [00:02<00:00, 227.67it/s] 88%|████████▊ | 582/661 [00:02<00:00, 212.61it/s] 91%|█████████▏| 604/661 [00:02<00:00, 205.07it/s] 95%|█████████▍| 627/661 [00:02<00:00, 209.48it/s] 98%|█████████▊| 649/661 [00:02<00:00, 201.40it/s]100%|██████████| 661/661 [00:02<00:00, 223.42it/s]
We strongly recommend passing in an `attention_mask` since your input_ids may be padded. See https://huggingface.co/docs/transformers/troubleshooting#incorrect-output-when-padding-tokens-arent-masked.
the length of train_news_list is: 528
the length of val_news_list is: 66
the length of test_news_list is: 67
epoch:1

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 1, 0, 1, 1, 1, 0, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.030753182247281075 / 0.14520153403282166
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.055503420531749725 / 0.15840519964694977
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.02492436394095421 / 0.11168450117111206
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.06442111730575562 / 0.10442571341991425
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.039714548736810684 / 0.10292107611894608
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.018489720299839973 / 0.10432416200637817
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.204718679189682 / 0.15565554797649384
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.340266615152359 / 0.13744352757930756
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.13738179206848145 / 0.11963007599115372
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.10663800686597824 / 0.13232454657554626
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.040085289627313614 / 0.13805775344371796
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.042816657572984695 / 0.08997412025928497
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.009988553822040558 / 0.10375846922397614
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.1807442009449005 / 0.06967484205961227
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.08289561420679092 / 0.10641930252313614
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.02551506645977497 / 0.1141723245382309
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.050564348697662354 / 0.10098354518413544
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.07235734164714813 / 0.1143047884106636
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.02618250995874405 / 0.14561913907527924
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.05178988352417946 / 0.1660410761833191
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.01755371131002903 / 0.1514822542667389
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.08336399495601654 / 0.09483228623867035
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.13312838971614838 / 0.10840921849012375
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.0795188918709755 / 0.11965151876211166
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.09511753171682358 / 0.13122309744358063
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.03666907548904419 / 0.09850244969129562
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.03814341500401497 / 0.12196050584316254
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.07667645812034607 / 0.14843100309371948
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.04153992608189583 / 0.11799585819244385
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.18256299197673798 / 0.09276100993156433
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.06880824267864227 / 0.1333000659942627
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.17221352458000183 / 0.1429394781589508
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.09735577553510666 / 0.13350200653076172
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.11169952154159546 / 0.15389302372932434
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.08378393203020096 / 0.13905583322048187
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.11298908293247223 / 0.17440317571163177
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.17256119847297668 / 0.19090107083320618
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 37:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.13752040266990662 / 0.19537663459777832
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.9036452770233154 / 0.17989471554756165
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.19461143016815186 / 0.1589122712612152
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.7218416929244995 / 0.23639756441116333
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.29424163699150085 / 0.20400378108024597
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.12549227476119995 / 0.1775548905134201
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.16177773475646973 / 0.21383628249168396
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.41301876306533813 / 0.21131259202957153
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.1170005351305008 / 0.26364263892173767
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.537977397441864 / 0.2446383535861969
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.3640745282173157 / 0.2877584397792816
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.22963371872901917 / 0.19639204442501068
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.136260986328125 / 0.21713699400424957
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.4141073226928711 / 0.23560017347335815
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.2818084955215454 / 0.2463301718235016
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.1098015308380127 / 0.1484624445438385
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.2880192995071411 / 0.22107237577438354
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.5592692494392395 / 0.2866007089614868
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.15253400802612305 / 0.20109117031097412
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.1782616227865219 / 0.20188884437084198
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.12270382046699524 / 0.19432148337364197
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.20777088403701782 / 0.2637711763381958
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.09700466692447662 / 0.18974240124225616
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.31955328583717346 / 0.34355753660202026
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.19306617975234985 / 0.17444388568401337
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.25892913341522217 / 0.27953287959098816
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.31505247950553894 / 0.32004451751708984
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.3315710723400116 / 0.35027948021888733
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False
epoch:1, train_loss: 10.5312......
********epoch:1, val_loss:0.6861,  Acc:0.424, Pre:0.795, Rec:0.424, F1:0.351
Time consuming for this epoch: 35.660658836364746s
********************************************************************************
epoch:2

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 1, 0, 0, 0, 1, 1, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.7986592650413513 / 0.2784620225429535
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.3058118224143982 / 0.2616121768951416
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.3056134879589081 / 0.37524282932281494
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.16255487501621246 / 0.1741095334291458
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.38636869192123413 / 0.2624775171279907
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.2868814468383789 / 0.3983006477355957
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.1382803916931152 / 0.2636408507823944
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.3610893785953522 / 0.30791521072387695
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.23153270781040192 / 0.24950668215751648
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.3054771423339844 / 0.28779593110084534
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.12658466398715973 / 0.1794978678226471
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.15407676994800568 / 0.21802030503749847
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.42766326665878296 / 0.29903340339660645
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.4032062292098999 / 0.351055771112442
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.3263208568096161 / 0.344455748796463
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.47683605551719666 / 0.27597248554229736
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.1896677017211914 / 0.25339940190315247
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.3511303961277008 / 0.3988246023654938
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.6629374027252197 / 0.5757434964179993
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.4187343120574951 / 0.2926587462425232
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.14204375445842743 / 0.25813478231430054
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.2702462673187256 / 0.2358824908733368
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.6114345192909241 / 0.3682205080986023
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.49651458859443665 / 0.38093072175979614
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.4273814260959625 / 0.5215198397636414
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.45396116375923157 / 0.3346370458602905
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.35080477595329285 / 0.3367335796356201
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.4143272042274475 / 0.24498873949050903
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.25286293029785156 / 0.37609943747520447
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.16275537014007568 / 0.3921549916267395
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 30:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.268409788608551 / 0.34999310970306396
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.39641931653022766 / 0.57192462682724
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.3253626227378845 / 0.28849226236343384
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.18776628375053406 / 0.6223044395446777
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.9882398247718811 / 0.3785252571105957
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.23923081159591675 / 0.45783233642578125
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.28786700963974 / 0.4461367726325989
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.1961333006620407 / 0.46994638442993164
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.45904576778411865 / 0.4119839370250702
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.12044160068035126 / 0.2742886543273926
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.2545929253101349 / 0.807280421257019
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.2290877103805542 / 0.4773543179035187
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.41744109988212585 / 0.8535315990447998
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.20279227197170258 / 0.7718788981437683
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.2557765543460846 / 1.214834451675415
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.27469345927238464 / 0.8554754257202148
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.20583495497703552 / 0.9666975140571594
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.7725018858909607 / 0.5276826620101929
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.6270211935043335 / 0.5359724164009094
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.46547454595565796 / 0.7388806343078613
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.47226908802986145 / 0.9892848134040833
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.8494998812675476 / 0.48320937156677246
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.25712835788726807 / 0.82774817943573
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.3395804166793823 / 0.47689518332481384
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.3509916067123413 / 0.7945664525032043
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.7219614386558533 / 0.35955965518951416
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.3520711660385132 / 0.8261103630065918
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.30060821771621704 / 0.47013968229293823
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.352117121219635 / 0.9091721177101135
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.5579009056091309 / 0.5563624501228333
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: -0.4153694808483124 / 0.49228960275650024
[debug] label unique: [1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.4231434464454651 / 0.6503065824508667
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.33715903759002686 / 0.4222392439842224
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.3313632607460022 / 0.6055415868759155
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.5322265625 / 1.2928327322006226
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False
epoch:2, train_loss: 9.6152......
********epoch:2, val_loss:0.6088,  Acc:0.712, Pre:0.825, Rec:0.712, F1:0.720
Time consuming for this epoch: 35.56002950668335s
********************************************************************************
epoch:3

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 1, 0, 1, 1, 0, 1, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.8648709058761597 / 0.6430273056030273
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.36143219470977783 / 0.5535427927970886
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.3317147195339203 / 0.4614230990409851
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.5993901491165161 / 0.5837346315383911
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.29134199023246765 / 0.7904065251350403
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 5:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: -0.9626539349555969 / 0.6463048458099365
[debug] label unique: [1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.6671323776245117 / 0.7081232070922852
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.3050857484340668 / 0.38617652654647827
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.4688945710659027 / 0.6419878005981445
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.39517173171043396 / 0.9109577536582947
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.2722004652023315 / 0.9465799331665039
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.38404807448387146 / 0.569865882396698
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.0466028451919556 / 1.1406089067459106
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.4859406650066376 / 1.0542793273925781
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.4309607744216919 / 0.6396034955978394
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.4951740503311157 / 0.6486661434173584
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.4603722095489502 / 0.5232347249984741
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.1510096788406372 / 0.7676625847816467
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.5179921984672546 / 0.5772482752799988
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.5889522433280945 / 1.1463074684143066
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4198169708251953 / 1.1713383197784424
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.4538818895816803 / 0.6258904933929443
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.3691834807395935 / 0.5570268630981445
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.49427875876426697 / 1.0978232622146606
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.5071622133255005 / 2.259573459625244
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.40490949153900146 / 0.728166937828064
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.8665328621864319 / 0.9624934792518616
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.5043632984161377 / 0.7027583122253418
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.7012852430343628 / 1.025256872177124
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 0
[debug] pred_res min/max: -0.6399345993995667 / 2.18320631980896
[debug] label unique: [0]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.6747525930404663 / 0.9920312762260437
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.7204771041870117 / 1.530038595199585
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.49551400542259216 / 0.9576574563980103
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.6827241778373718 / 0.8281761407852173
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.7276012301445007 / 0.8540101051330566
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.6352536082267761 / 1.0726878643035889
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.4673980474472046 / 0.8423727750778198
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.2388997077941895 / 0.7473074793815613
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.7318586707115173 / 0.8718159198760986
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.7790762782096863 / 0.9093290567398071
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.6006767749786377 / 1.1915265321731567
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.6944069266319275 / 1.5689104795455933
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.697407603263855 / 0.7868494987487793
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.7000899910926819 / 0.8317626118659973
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.725716233253479 / 0.7914026975631714
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.0452873706817627 / 1.1276947259902954
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.8351515531539917 / 1.582500696182251
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.5914602875709534 / 0.7813277244567871
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.7990541458129883 / 0.6781162619590759
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.6426077485084534 / 1.1021740436553955
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.7110368013381958 / 0.8432926535606384
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.9055464267730713 / 0.9344589710235596
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.9079868793487549 / 1.1555637121200562
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.7643280029296875 / 0.905125617980957
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.8148692846298218 / 0.8277243375778198
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.9481753706932068 / 1.0309934616088867
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.6559311747550964 / 1.0989019870758057
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.9488027691841125 / 0.7264608144760132
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.7792656421661377 / 0.9197918176651001
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.5401543378829956 / 1.401978850364685
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.037961721420288 / 1.8210437297821045
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.8928266167640686 / 0.8023529052734375
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.0519357919692993 / 1.6780753135681152
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.9867815971374512 / 1.6781964302062988
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.1703606843948364 / 1.2340338230133057
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False
epoch:3, train_loss: 7.5776......
********epoch:3, val_loss:0.4287,  Acc:0.833, Pre:0.851, Rec:0.833, F1:0.837
Time consuming for this epoch: 35.50888442993164s
********************************************************************************
epoch:4

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 0, 1, 0, 1, 0, 0, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.8076555132865906 / 1.4987366199493408
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.890401303768158 / 1.5986076593399048
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.6833913326263428 / 0.9826538562774658
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.2237634658813477 / 1.2770631313323975
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.1544344425201416 / 1.8640801906585693
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.0812283754348755 / 0.8975218534469604
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.6352719664573669 / 1.1688398122787476
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.461241602897644 / 1.1447298526763916
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.236570119857788 / 1.298840880393982
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.124564528465271 / 1.5554949045181274
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.9503103494644165 / 1.8201513290405273
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.9528767466545105 / 1.1957933902740479
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.1764180660247803 / 1.2304346561431885
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.231947898864746 / 1.665009617805481
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.2397884130477905 / 1.3179491758346558
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.1575350761413574 / 1.5244792699813843
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.1399239301681519 / 1.3703399896621704
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.2458933591842651 / 1.9078130722045898
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9798085689544678 / 1.5654717683792114
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.2117844820022583 / 1.1341428756713867
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.2787988185882568 / 1.2963975667953491
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.2583215236663818 / 1.315881609916687
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.1782852411270142 / 1.52218496799469
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 23:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.0939120054244995 / 2.5740067958831787
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.6757007241249084 / 0.7532252669334412
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.2922940254211426 / 1.3165534734725952
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 0
[debug] pred_res min/max: -1.3696874380111694 / 2.1870245933532715
[debug] label unique: [0]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4019371271133423 / 1.665984869003296
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.1643508672714233 / 1.963090419769287
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.6911648511886597 / 1.5138367414474487
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.2884609699249268 / 1.3259879350662231
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.1652355194091797 / 1.1233793497085571
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.1058436632156372 / 1.6781312227249146
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4424550533294678 / 2.3398990631103516
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.5733729600906372 / 1.2827353477478027
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4610365629196167 / 1.7834075689315796
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.2036434412002563 / 1.962283968925476
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.859238862991333 / 1.4376808404922485
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.873226284980774 / 1.6037038564682007
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.652807593345642 / 1.7418441772460938
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4393876791000366 / 1.4416172504425049
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.0217522382736206 / 1.0613518953323364
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.20530104637146 / 1.2327930927276611
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.3831732273101807 / 2.2279345989227295
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.0924782752990723 / 1.8076775074005127
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.3409703969955444 / 1.3728656768798828
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.7545711994171143 / 1.1656306982040405
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4310165643692017 / 2.400024175643921
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.1264333724975586 / 1.856450080871582
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.508318543434143 / 1.5374133586883545
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.5086779594421387 / 1.3657640218734741
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.7267910242080688 / 2.1174614429473877
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.8564322590827942 / 1.1604115962982178
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.8645022511482239 / 1.3605382442474365
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4072015285491943 / 1.592157244682312
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4959924221038818 / 1.9249449968338013
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.382561445236206 / 1.303278923034668
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.7490453720092773 / 1.4826598167419434
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.2561137676239014 / 1.3776367902755737
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9687824249267578 / 2.103386878967285
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.2548742294311523 / 1.9001072645187378
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.8344640731811523 / 1.7721264362335205
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.7523537874221802 / 2.828183889389038
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -0.8441696166992188 / 1.3290027379989624
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.6011403799057007 / 2.632422685623169
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False
epoch:4, train_loss: 5.6568......
********epoch:4, val_loss:0.3841,  Acc:0.833, Pre:0.851, Rec:0.833, F1:0.837
Time consuming for this epoch: 35.34540271759033s
********************************************************************************
epoch:5

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 1, 1, 0, 1, 0, 1, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.7856676578521729 / 2.4563536643981934
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.5028616189956665 / 2.216817617416382
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4877644777297974 / 2.326777458190918
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9152292013168335 / 3.453217029571533
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.5198783874511719 / 2.345919370651245
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.6963906288146973 / 1.7160285711288452
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.7497508525848389 / 2.566220998764038
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.3721909523010254 / 2.264746904373169
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.060580015182495 / 1.969447374343872
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4701744318008423 / 2.1174912452697754
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.8148424625396729 / 1.768398642539978
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.1222302913665771 / 1.1765936613082886
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4488340616226196 / 1.419769287109375
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.8973358869552612 / 1.8181242942810059
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.81209397315979 / 1.7591726779937744
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9114116430282593 / 1.6631945371627808
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4446053504943848 / 2.172464609146118
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.8478553295135498 / 1.7965140342712402
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.978348731994629 / 2.806060314178467
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4094246625900269 / 2.456808090209961
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.6496890783309937 / 1.5859291553497314
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.2386040687561035 / 2.5586557388305664
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.0914032459259033 / 1.9819962978363037
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.5930753946304321 / 1.5785365104675293
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9709633588790894 / 1.8978663682937622
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.6438610553741455 / 1.6210780143737793
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.3829312324523926 / 2.094369411468506
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.151021957397461 / 2.1249356269836426
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.5445919036865234 / 1.5939509868621826
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.1184685230255127 / 2.0053629875183105
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.379311203956604 / 2.1432154178619385
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.6279016733169556 / 2.1150999069213867
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.049062728881836 / 3.0476341247558594
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.669258952140808 / 2.2088463306427
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.7754930257797241 / 2.1021578311920166
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.400186538696289 / 1.6077702045440674
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.8786277770996094 / 3.3298888206481934
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4804569482803345 / 1.505249261856079
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 38:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9705164432525635 / 2.5035016536712646
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.156517744064331 / 1.484079122543335
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4260268211364746 / 2.908369302749634
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.6555169820785522 / 2.299909830093384
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.2240540981292725 / 2.0799450874328613
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4220845699310303 / 1.893604040145874
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.119764804840088 / 2.014691114425659
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4808359146118164 / 2.1029176712036133
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.3581478595733643 / 0.9992222189903259
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9666870832443237 / 1.8845499753952026
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.3302114009857178 / 2.7798123359680176
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.6820766925811768 / 1.6207141876220703
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.3468074798583984 / 2.169431209564209
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.6526650190353394 / 1.6167463064193726
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9601582288742065 / 1.8351624011993408
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.055358409881592 / 1.9579417705535889
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.7769969701766968 / 1.732546329498291
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.317765712738037 / 2.2074594497680664
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.3562240600585938 / 2.8889923095703125
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.151756763458252 / 2.0331037044525146
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.8943580389022827 / 2.6156907081604004
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.8585448265075684 / 1.739917516708374
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.1714791059494019 / 1.7421306371688843
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.104393482208252 / 2.046666145324707
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.0827600955963135 / 1.9547724723815918
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.1789278984069824 / 2.5015692710876465
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.213444948196411 / 2.890753984451294
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False
epoch:5, train_loss: 4.9154......
********epoch:5, val_loss:0.3429,  Acc:0.864, Pre:0.872, Rec:0.864, F1:0.866
Time consuming for this epoch: 35.63749885559082s
********************************************************************************
epoch:6

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 1, 1, 1, 1, 1, 1, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.111772298812866 / 2.5585830211639404
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4714620113372803 / 2.2904253005981445
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.8576080799102783 / 2.337383985519409
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4520182609558105 / 2.265202045440674
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.6445329189300537 / 2.425797462463379
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.602405071258545 / 2.379941701889038
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9068554639816284 / 1.665934681892395
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.8311518430709839 / 3.3279919624328613
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: -1.951875925064087 / 1.855121374130249
[debug] label unique: [1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9076181650161743 / 1.9855905771255493
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.051361560821533 / 1.9287348985671997
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.307995319366455 / 3.3099913597106934
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9292789697647095 / 2.7584164142608643
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.494539976119995 / 2.199788808822632
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.588280439376831 / 2.0305261611938477
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.2711057662963867 / 2.130319356918335
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.6701338291168213 / 1.9754756689071655
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.0978751182556152 / 2.231142520904541
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.1983020305633545 / 2.04243540763855
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.34525728225708 / 2.1701040267944336
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9926279783248901 / 2.069397449493408
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9190891981124878 / 2.4355521202087402
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.0203697681427 / 2.10589337348938
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.7968544960021973 / 2.394598960876465
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.122309684753418 / 1.5407888889312744
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.1048736572265625 / 2.0589599609375
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.1473145484924316 / 2.790790557861328
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.0093438625335693 / 1.9155924320220947
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.081061601638794 / 2.5408143997192383
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.7379006147384644 / 2.5885326862335205
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.604980707168579 / 2.381089448928833
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.6983706951141357 / 2.3149824142456055
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9612863063812256 / 2.9435250759124756
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.185187578201294 / 2.9112298488616943
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.8582499027252197 / 2.5979604721069336
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.8064665794372559 / 2.23538875579834
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 36:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.11936616897583 / 1.9886285066604614
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.1803972721099854 / 2.454845666885376
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.6607398986816406 / 2.4231441020965576
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.7068819999694824 / 2.741910934448242
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.1290974617004395 / 2.4730007648468018
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.3790767192840576 / 2.4166438579559326
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.512803077697754 / 2.3093814849853516
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 0
[debug] pred_res min/max: -1.8711607456207275 / 3.4265542030334473
[debug] label unique: [0]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9153804779052734 / 1.8065617084503174
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.679413318634033 / 2.4386096000671387
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.6462154388427734 / 2.384031295776367
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.5531413555145264 / 2.3386569023132324
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4870424270629883 / 1.8690351247787476
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4415993690490723 / 2.237745523452759
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.8672538995742798 / 2.3858282566070557
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.7956818342208862 / 2.518611192703247
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9791773557662964 / 2.4735608100891113
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4791221618652344 / 2.7458770275115967
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.283449172973633 / 2.7925169467926025
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4457948207855225 / 3.1953859329223633
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.636549949645996 / 2.2123091220855713
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9137847423553467 / 2.267737627029419
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.840860366821289 / 3.4474287033081055
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4758105278015137 / 2.739281177520752
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.7604639530181885 / 2.499406576156616
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.59368896484375 / 2.8423147201538086
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.5271170139312744 / 2.2999234199523926
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.936239242553711 / 2.776895761489868
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.8736772537231445 / 2.443119525909424
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False
epoch:6, train_loss: 4.4466......
********epoch:6, val_loss:0.4793,  Acc:0.758, Pre:0.842, Rec:0.758, F1:0.766
EarlyStopping counter: 1 out of 8
Time consuming for this epoch: 34.39272928237915s
********************************************************************************
epoch:7

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 0, 0, 1, 1, 0, 1, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.500051498413086 / 2.2944564819335938
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.408001184463501 / 2.219377040863037
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.472388505935669 / 2.2201154232025146
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.7786571979522705 / 2.005276679992676
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.3665900230407715 / 2.927628993988037
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.656403064727783 / 2.77034854888916
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.7581188678741455 / 1.6884835958480835
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.391592264175415 / 2.1914353370666504
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.8723269701004028 / 2.290074110031128
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.2757391929626465 / 2.1062605381011963
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.095006227493286 / 2.279780387878418
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.161522150039673 / 2.8247110843658447
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.8970534801483154 / 3.0615904331207275
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.244330406188965 / 2.8289260864257812
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.790645956993103 / 2.268590211868286
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4791314601898193 / 2.390690326690674
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.816772222518921 / 2.7621688842773438
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.450831174850464 / 2.5018208026885986
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.356354236602783 / 2.0889780521392822
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.9198477268218994 / 2.8468353748321533
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.544620990753174 / 2.4560093879699707
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.318542242050171 / 2.51566743850708
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.1464545726776123 / 2.800262928009033
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9616328477859497 / 2.4995229244232178
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.6738756895065308 / 2.223008632659912
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.5037992000579834 / 2.2762112617492676
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.6871180534362793 / 2.4466705322265625
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.0127899646759033 / 2.5039448738098145
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.8374099731445312 / 2.728266477584839
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 29:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.65859317779541 / 2.459113597869873
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.214303493499756 / 2.4193406105041504
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.2199206352233887 / 2.051492214202881
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.2982265949249268 / 2.1280102729797363
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.2785484790802 / 3.090204954147339
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.1928164958953857 / 3.0605244636535645
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.206238031387329 / 3.1611366271972656
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.032320737838745 / 1.957362174987793
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.5208938121795654 / 2.3055639266967773
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9476121664047241 / 2.2477712631225586
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4007225036621094 / 2.994366407394409
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.344892978668213 / 2.891704797744751
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.500295639038086 / 2.551867961883545
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.001664161682129 / 2.5228569507598877
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9608958959579468 / 2.660013198852539
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.351511240005493 / 2.9417808055877686
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.3253726959228516 / 2.1342968940734863
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4853835105895996 / 3.0945377349853516
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.0900378227233887 / 2.7611522674560547
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.2432610988616943 / 2.13448166847229
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.811077356338501 / 2.5404303073883057
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.590221405029297 / 2.350205898284912
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.614713668823242 / 2.7046916484832764
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4457924365997314 / 2.2405965328216553
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4819676876068115 / 2.281322717666626
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.5166053771972656 / 2.6325058937072754
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.2248408794403076 / 2.094684362411499
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.9552040100097656 / 2.6438276767730713
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.2268991470336914 / 2.509065628051758
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.8915362358093262 / 1.762381672859192
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.647030830383301 / 2.386035680770874
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.1768176555633545 / 2.7063233852386475
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.56919527053833 / 2.3442819118499756
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.802022695541382 / 2.529958963394165
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.0737128257751465 / 2.657548427581787
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.8755199909210205 / 2.5802149772644043
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False
epoch:7, train_loss: 3.9694......
********epoch:7, val_loss:0.3090,  Acc:0.894, Pre:0.901, Rec:0.894, F1:0.896
Time consuming for this epoch: 35.710094928741455s
********************************************************************************
epoch:8

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 0, 1, 1, 0, 1, 0, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.3703365325927734 / 2.7985167503356934
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.685194253921509 / 3.1932430267333984
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.7635319232940674 / 2.6824522018432617
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.4393752813339233 / 2.53530216217041
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.3379411697387695 / 2.7046291828155518
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.5404415130615234 / 3.103703260421753
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.61960506439209 / 3.2612063884735107
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.5712344646453857 / 3.6325230598449707
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.2128546237945557 / 2.0604426860809326
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.1821038722991943 / 2.4269073009490967
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.0111923217773438 / 3.739576816558838
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.612647771835327 / 3.27002215385437
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.53271484375 / 3.1841413974761963
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.6197028160095215 / 2.3573198318481445
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.328428268432617 / 3.0790812969207764
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.950143575668335 / 3.5724124908447266
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.224794626235962 / 2.8562119007110596
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.381027936935425 / 2.1621875762939453
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.194827079772949 / 2.7313032150268555
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.9915173053741455 / 2.9715797901153564
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.6723649501800537 / 3.663112163543701
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.3565549850463867 / 3.3596551418304443
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.8283252716064453 / 2.508869171142578
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.118856906890869 / 1.9576549530029297
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.1649084091186523 / 2.195239543914795
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.8675477504730225 / 2.565358877182007
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.9314684867858887 / 3.3508474826812744
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.6926095485687256 / 2.821974515914917
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.534423589706421 / 2.7189748287200928
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.864821434020996 / 2.5610153675079346
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.520991802215576 / 3.082536220550537
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.118051767349243 / 2.287576198577881
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.0306894779205322 / 3.0495638847351074
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 33:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.392545223236084 / 2.7542505264282227
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.190131664276123 / 2.774913787841797
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4089226722717285 / 2.5413267612457275
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.872506856918335 / 3.5665202140808105
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.746664047241211 / 2.5507397651672363
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.6260123252868652 / 2.3699166774749756
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.850658416748047 / 2.55662202835083
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.2118263244628906 / 2.8421504497528076
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.28164005279541 / 2.29437255859375
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.7430310249328613 / 2.294306993484497
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.116642951965332 / 2.551105499267578
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.9595839977264404 / 2.641979932785034
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.9139223098754883 / 2.607232093811035
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.852360486984253 / 2.585202217102051
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: -3.4983878135681152 / 3.080105781555176
[debug] label unique: [1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.369678258895874 / 2.947979688644409
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.3360705375671387 / 2.9445810317993164
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4572508335113525 / 2.256186008453369
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.025010347366333 / 2.6370460987091064
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.806171417236328 / 2.5540027618408203
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.7741713523864746 / 2.4868438243865967
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.662440776824951 / 3.205033540725708
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.5012130737304688 / 4.04581356048584
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.744586944580078 / 3.2609429359436035
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.459808826446533 / 2.233365058898926
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.535334587097168 / 2.278496026992798
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.208937406539917 / 2.0106887817382812
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.487236976623535 / 2.238128662109375
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.04203724861145 / 2.0198874473571777
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.0862207412719727 / 2.7449517250061035
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.92545485496521 / 3.5820162296295166
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.8416550159454346 / 3.280224084854126
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False
epoch:8, train_loss: 3.6239......
********epoch:8, val_loss:0.3130,  Acc:0.879, Pre:0.890, Rec:0.879, F1:0.881
EarlyStopping counter: 1 out of 8
Time consuming for this epoch: 35.10797619819641s
********************************************************************************
epoch:9

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 0, 0, 1, 1, 1, 0, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.6077165603637695 / 3.218170166015625
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.492893695831299 / 3.072211742401123
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -1.9964793920516968 / 2.8446156978607178
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.7192792892456055 / 2.468043804168701
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.6314358711242676 / 3.1701624393463135
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.985414981842041 / 3.7139976024627686
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.0068411827087402 / 3.6279845237731934
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.0551936626434326 / 2.992117404937744
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.336534261703491 / 2.9274258613586426
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.852055072784424 / 2.552475929260254
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.9428186416625977 / 2.6300573348999023
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.320343017578125 / 4.046348571777344
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.53277850151062 / 3.109898567199707
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 13:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4893219470977783 / 3.214040517807007
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.7212090492248535 / 2.444793701171875
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -4.10739278793335 / 3.394303321838379
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.9766452312469482 / 2.6334164142608643
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.319382429122925 / 2.322979211807251
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.1467673778533936 / 1.956976056098938
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.389526128768921 / 2.8601412773132324
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.6591055393218994 / 2.425913095474243
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.625513792037964 / 2.894590377807617
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.1368844509124756 / 1.959598183631897
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.3278603553771973 / 2.2961549758911133
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.04813289642334 / 2.112868309020996
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.863914966583252 / 3.487812042236328
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.099470853805542 / 2.7552764415740967
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.096214771270752 / 2.658522129058838
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.366872549057007 / 2.6893253326416016
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.207364559173584 / 2.334061622619629
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.1242427825927734 / 2.759511947631836
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.6843414306640625 / 2.9414138793945312
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.81246018409729 / 3.300847291946411
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4521374702453613 / 2.2089219093322754
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.9898624420166016 / 3.6582584381103516
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.6800787448883057 / 3.3460545539855957
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.91869854927063 / 2.6260125637054443
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.8971669673919678 / 3.00483775138855
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.940023422241211 / 3.722385883331299
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.7845518589019775 / 2.4643330574035645
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.4807538986206055 / 3.0311365127563477
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.4209601879119873 / 3.5369296073913574
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.8598215579986572 / 3.6624200344085693
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.6107001304626465 / 2.93599534034729
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.4545485973358154 / 3.201775550842285
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.61381196975708 / 3.165257692337036
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.6253232955932617 / 3.2162532806396484
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.196117401123047 / 3.900768280029297
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.4462785720825195 / 4.964953899383545
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.2338788509368896 / 2.85512375831604
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.122006416320801 / 3.1948347091674805
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.799466848373413 / 2.6019623279571533
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.47379994392395 / 3.042037010192871
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.4211394786834717 / 3.0071473121643066
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.482816457748413 / 3.029949188232422
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -2.6477279663085938 / 2.817257881164551
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: -3.259047269821167 / 2.252021312713623
[debug] label unique: [0, 1]
[check] any label out of bound? False
[check] any label < 0? False
[check] label requires grad? False
[check] pred_res has NaN? False
[check] pred_res has Inf? False

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:9, train_loss: nan......
********epoch:9, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 35.711344718933105s
********************************************************************************
epoch:10

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 0, 0, 0, 0, 1, 0, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 41:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:10, train_loss: nan......
********epoch:10, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 30.55256462097168s
********************************************************************************
epoch:11

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 1, 1, 1, 1, 0, 1, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 34:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:11, train_loss: nan......
********epoch:11, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 30.54215145111084s
********************************************************************************
epoch:12

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 1, 1, 1, 1, 1, 1, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 3:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:12, train_loss: nan......
********epoch:12, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 30.417344331741333s
********************************************************************************
epoch:13

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 1, 1, 0, 1, 0, 0, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 25:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:13, train_loss: nan......
********epoch:13, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 30.863646507263184s
********************************************************************************
epoch:14

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 0, 1, 1, 0, 1, 0, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 22:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:14, train_loss: nan......
********epoch:14, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.088217973709106s
********************************************************************************
epoch:15

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 1, 0, 0, 0, 0, 0, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 47:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:15, train_loss: nan......
********epoch:15, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 30.990924835205078s
********************************************************************************
epoch:16

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 1, 1, 1, 1, 1, 0, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 26:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:16, train_loss: nan......
********epoch:16, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.230761766433716s
********************************************************************************
epoch:17

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 1, 0, 1, 0, 1, 0, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 0
[debug] pred_res min/max: nan / nan
[debug] label unique: [0]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 65:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')
epoch:17, train_loss: nan......
********epoch:17, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.013864994049072s
********************************************************************************
epoch:18

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 1, 0, 0, 1, 0, 1, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 3:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:18, train_loss: nan......
********epoch:18, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.136701583862305s
********************************************************************************
epoch:19

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 0, 0, 0, 0, 1, 0, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 60:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:19, train_loss: nan......
********epoch:19, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.0298810005188s
********************************************************************************
epoch:20

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 1, 0, 0, 1, 0, 1, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 61:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:20, train_loss: nan......
********epoch:20, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 30.858591318130493s
********************************************************************************
epoch:21

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 1, 1, 0, 1, 1, 0, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 54:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:21, train_loss: nan......
********epoch:21, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 30.956690073013306s
********************************************************************************
epoch:22

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 0, 1, 1, 0, 1, 1, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 34:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:22, train_loss: nan......
********epoch:22, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.05162501335144s
********************************************************************************
epoch:23

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 0:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:23, train_loss: nan......
********epoch:23, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 30.958611488342285s
********************************************************************************
epoch:24

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 0, 0, 0, 1, 1, 1, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 64:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:24, train_loss: nan......
********epoch:24, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.146583318710327s
********************************************************************************
epoch:25

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 1, 1, 1, 0, 0, 1, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 48:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 0
[debug] pred_res min/max: nan / nan
[debug] label unique: [0]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:25, train_loss: nan......
********epoch:25, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.19225525856018s
********************************************************************************
epoch:26

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 1, 1, 0, 1, 0, 0, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 53:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:26, train_loss: nan......
********epoch:26, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 30.978904485702515s
********************************************************************************
epoch:27

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 0, 0, 1, 0, 1, 0, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 62:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:27, train_loss: nan......
********epoch:27, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.00685977935791s
********************************************************************************
epoch:28

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 1, 0, 1, 1, 0, 1, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 7:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 0
[debug] pred_res min/max: nan / nan
[debug] label unique: [0]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:28, train_loss: nan......
********epoch:28, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 30.99141001701355s
********************************************************************************
epoch:29

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 1, 0, 1, 1, 0, 1, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 10:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:29, train_loss: nan......
********epoch:29, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 30.952152729034424s
********************************************************************************
epoch:30

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 1, 1, 1, 1, 1, 0, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 46:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:30, train_loss: nan......
********epoch:30, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.030466318130493s
********************************************************************************
epoch:31

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 0, 0, 0, 1, 0, 0, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 35:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:31, train_loss: nan......
********epoch:31, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 30.923036098480225s
********************************************************************************
epoch:32

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 0, 1, 1, 0, 1, 1, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 51:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:32, train_loss: nan......
********epoch:32, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.207118034362793s
********************************************************************************
epoch:33

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 0:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:33, train_loss: nan......
********epoch:33, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.033506393432617s
********************************************************************************
epoch:34

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 0, 0, 1, 1, 1, 0, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 31:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:34, train_loss: nan......
********epoch:34, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 30.89314103126526s
********************************************************************************
epoch:35

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 1, 1, 0, 1, 1, 0, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 50:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:35, train_loss: nan......
********epoch:35, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 30.72557306289673s
********************************************************************************
epoch:36

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 0, 0, 1, 1, 0, 1, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 28:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:36, train_loss: nan......
********epoch:36, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 30.737042903900146s
********************************************************************************
epoch:37

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 1, 0, 1, 1, 0, 1, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 6:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:37, train_loss: nan......
********epoch:37, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 33.347715854644775s
********************************************************************************
epoch:38

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 1, 0, 1, 0, 1, 1, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 63:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:38, train_loss: nan......
********epoch:38, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.904770135879517s
********************************************************************************
epoch:39

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 0, 0, 1, 0, 1, 1, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 0
[debug] pred_res min/max: nan / nan
[debug] label unique: [0]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 13:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:39, train_loss: nan......
********epoch:39, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.899346590042114s
********************************************************************************
epoch:40

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 0, 1, 1, 0, 0, 0, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 41:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:40, train_loss: nan......
********epoch:40, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.352409601211548s
********************************************************************************
epoch:41

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 1, 0, 1, 1, 0, 0, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 29:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:41, train_loss: nan......
********epoch:41, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.586793661117554s
********************************************************************************
epoch:42

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([0, 1, 0, 0, 0, 1, 0, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 1 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 23:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:42, train_loss: nan......
********epoch:42, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 32.5112681388855s
********************************************************************************
epoch:43

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 1, 0, 1, 0, 0, 0, 0], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 0
[debug] pred_res min/max: nan / nan
[debug] label unique: [0]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 37:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:43, train_loss: nan......
********epoch:43, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 32.440327882766724s
********************************************************************************
epoch:44

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
=== [DEBUG: Batch 0] ===
train_label: tensor([1, 1, 1, 0, 0, 1, 0, 1], device='cuda:0')
label min/max: 0 / 1
unique labels: [0, 1]
========================
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 1] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 2] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 3] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 4] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 5] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 6] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 7] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 8] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 9] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 10] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 11] Begins.
[debug] -1 counter in train_label: 0
[SKIP] Invalid labels at batch 11:
Invalid labels: tensor([-9223372036854775808], device='cuda:0')

[Batch 12] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 13] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 14] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 15] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 16] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 17] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 18] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 19] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 20] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 21] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 22] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 23] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 24] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 25] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 26] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 27] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 28] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 29] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 30] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 31] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 32] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 33] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 34] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 35] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 36] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 37] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 38] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 39] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 40] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 41] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 42] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 43] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 44] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 45] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 46] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 47] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 48] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 49] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 50] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 51] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 52] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 53] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 54] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 55] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 56] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 57] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 58] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 59] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 60] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 61] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 62] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 63] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 64] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)

[Batch 65] Begins.
[debug] -1 counter in train_label: 0
[debug] pred_res.shape: torch.Size([8, 2])
[debug] train_label.shape: torch.Size([8])
[debug] label dtype: torch.int64 | pred_res dtype: torch.float32
[debug] device: label(cuda:0) | pred_res(cuda:0)
[debug] label min/max: 0 / 1
[debug] pred_res min/max: nan / nan
[debug] label unique: [0, 1]
[debug] ❌ kldiv is NaN or Inf!
kldiv: tensor(nan, device='cuda:0', grad_fn=<MeanBackward0>)
epoch:44, train_loss: nan......
********epoch:44, val_loss:nan,  Acc:0.682, Pre:0.465, Rec:0.682, F1:0.553
Time consuming for this epoch: 31.645902395248413s
********************************************************************************
epoch:45

[Batch 0] Begins.
[debug] -1 counter in train_label: 0
